/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package swing;

import clases.ThreadPrincipal;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.util.StringTokenizer;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author urbano
 */
public class Inicio extends javax.swing.JFrame {

    ThreadPrincipal hilo;

    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();
        this.setEntornoGrafico();
    }

    public void añadirLineaConsola(String texto) {
        this.consolaTextPane.setText(this.consolaTextPane.getText() + "\n" + texto);
    }

    public void ocultarLablesInformativos() {
        iteracionLabel.setVisible(false);
        iteracionActualLabel.setVisible(false);
        deLabel.setVisible(false);
        iteracionesTotalesLabel.setVisible(false);
        porcentajeActualLabel.setVisible(false);
        porcientoCombletadoLabel.setVisible(false);
        horasLabel.setVisible(false);
        dosPuntosHoraLabel2.setVisible(false);
        minutosLabel.setVisible(false);
        dosPuntosHoraLabel1.setVisible(false);
        segundosLabel.setVisible(false);
        barraProgresoGeneral.setVisible(false);
    }

    public static void mostrarLabelsInformativos() {
        iteracionLabel.setVisible(true);
        iteracionActualLabel.setVisible(true);
        deLabel.setVisible(true);
        iteracionesTotalesLabel.setVisible(true);
        porcentajeActualLabel.setVisible(true);
        porcientoCombletadoLabel.setVisible(true);
        horasLabel.setVisible(true);
        dosPuntosHoraLabel2.setVisible(true);
        minutosLabel.setVisible(true);
        dosPuntosHoraLabel1.setVisible(true);
        segundosLabel.setVisible(true);
        barraProgresoGeneral.setVisible(true);
        iteracionActualLabel.setText("0");
        iteracionesTotalesLabel.setText("0");
        porcentajeActualLabel.setText("0");
        horasLabel.setText("0");
        minutosLabel.setText("0");
        segundosLabel.setText("0");
        barraProgresoGeneral.setValue(0);
        pararHiloButon.setVisible(true);

    }

    public void setEntornoGrafico() {
        this.getContentPane().setBackground(Color.DARK_GRAY);
        this.empezarTestButon.setBackground(Color.GRAY);
        this.empezarTestButon.setForeground(Color.BLACK);
        this.escribaElNumeroLabel.setForeground(Color.WHITE);
        //this.iteracionesPredeterminadasComboBox.setBackground(Color.black);
        //this.iteracionesPredeterminadasComboBox.setForeground(Color.WHITE);
        this.panelIteraciones.setBackground(Color.LIGHT_GRAY);
        pararHiloButon.setVisible(false);
        this.setSize(550, 125);
        this.ocultarLablesInformativos();
        //setIconImage (new ImageIcon(getClass().getResource("Ico.png")).getImage());
        
    }

    public void setIteracionesPredeterminadas(String c) {
        switch (c) {
            case "INSTANTÁNEO":
                this.numeroIteracionesTxt.setText("1000");
                break;
            case "MUY CORTO":
                this.numeroIteracionesTxt.setText("10000");
                break;
            case "CORTO":
                this.numeroIteracionesTxt.setText("100000");
                break;
            case "MEDIO":
                this.numeroIteracionesTxt.setText("1000000");
                break;
            case "LARGO":
                this.numeroIteracionesTxt.setText("5000000");
                break;
            case "MUY LARGO":
                this.numeroIteracionesTxt.setText("10000000");
                break;
            case "ETERNO":
                this.numeroIteracionesTxt.setText("100000000");
                break;
            default:
                this.numeroIteracionesTxt.setText("");
                break;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        empezarTestButon = new javax.swing.JButton();
        escribaElNumeroLabel = new javax.swing.JLabel();
        panelIteraciones = new javax.swing.JPanel();
        iteracionesPredeterminadasComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        numeroIteracionesTxt = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        consolaTextPane = new javax.swing.JTextArea();
        iteracionLabel = new javax.swing.JLabel();
        iteracionActualLabel = new javax.swing.JLabel();
        deLabel = new javax.swing.JLabel();
        iteracionesTotalesLabel = new javax.swing.JLabel();
        porcentajeActualLabel = new javax.swing.JLabel();
        porcientoCombletadoLabel = new javax.swing.JLabel();
        segundosLabel = new javax.swing.JLabel();
        dosPuntosHoraLabel1 = new javax.swing.JLabel();
        minutosLabel = new javax.swing.JLabel();
        dosPuntosHoraLabel2 = new javax.swing.JLabel();
        horasLabel = new javax.swing.JLabel();
        barraProgresoGeneral = new javax.swing.JProgressBar();
        pararHiloButon = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("jBurning");
        setIconImage(new ImageIcon("Resources/Ico.png").getImage());
        setResizable(false);

        empezarTestButon.setBackground(new java.awt.Color(255, 255, 255));
        empezarTestButon.setForeground(new java.awt.Color(0, 0, 0));
        empezarTestButon.setText("Empezar test");
        empezarTestButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                empezarTestButonActionPerformed(evt);
            }
        });

        escribaElNumeroLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        escribaElNumeroLabel.setText("Escriba el número de iteraciones que desea realizar o elija uno de los predeterminados:");

        panelIteraciones.setBackground(new java.awt.Color(255, 255, 255));

        iteracionesPredeterminadasComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PERSONALIZADO", "INSTANTÁNEO", "MUY CORTO", "CORTO", "MEDIO", "LARGO", "MUY LARGO", "ETERNO" }));
        iteracionesPredeterminadasComboBox.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                iteracionesPredeterminadasComboBoxPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jScrollPane1.setViewportView(numeroIteracionesTxt);

        javax.swing.GroupLayout panelIteracionesLayout = new javax.swing.GroupLayout(panelIteraciones);
        panelIteraciones.setLayout(panelIteracionesLayout);
        panelIteracionesLayout.setHorizontalGroup(
            panelIteracionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIteracionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iteracionesPredeterminadasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelIteracionesLayout.setVerticalGroup(
            panelIteracionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIteracionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelIteracionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iteracionesPredeterminadasComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        consolaTextPane.setEditable(false);
        consolaTextPane.setBackground(new java.awt.Color(0, 0, 0));
        consolaTextPane.setColumns(20);
        consolaTextPane.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 11)); // NOI18N
        consolaTextPane.setForeground(new java.awt.Color(255, 255, 255));
        consolaTextPane.setRows(5);
        consolaTextPane.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                consolaTextPaneMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                consolaTextPaneMouseReleased(evt);
            }
        });
        consolaTextPane.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                consolaTextPaneKeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(consolaTextPane);

        iteracionLabel.setForeground(new java.awt.Color(255, 255, 255));
        iteracionLabel.setText("Iteración");

        iteracionActualLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        iteracionActualLabel.setForeground(new java.awt.Color(255, 255, 255));
        iteracionActualLabel.setText("iteración");

        deLabel.setForeground(new java.awt.Color(255, 255, 255));
        deLabel.setText("de");

        iteracionesTotalesLabel.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        iteracionesTotalesLabel.setForeground(new java.awt.Color(255, 255, 255));
        iteracionesTotalesLabel.setText("iteracionesTotales");

        porcentajeActualLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        porcentajeActualLabel.setForeground(new java.awt.Color(255, 255, 255));
        porcentajeActualLabel.setText("porcentaje");

        porcientoCombletadoLabel.setForeground(new java.awt.Color(255, 255, 255));
        porcientoCombletadoLabel.setText("% completado");

        segundosLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        segundosLabel.setForeground(new java.awt.Color(255, 255, 255));
        segundosLabel.setText("jLabel1");

        dosPuntosHoraLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        dosPuntosHoraLabel1.setForeground(new java.awt.Color(255, 255, 255));
        dosPuntosHoraLabel1.setText(":");

        minutosLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        minutosLabel.setForeground(new java.awt.Color(255, 255, 255));
        minutosLabel.setText("jLabel1");

        dosPuntosHoraLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        dosPuntosHoraLabel2.setForeground(new java.awt.Color(255, 255, 255));
        dosPuntosHoraLabel2.setText(":");

        horasLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        horasLabel.setForeground(new java.awt.Color(255, 255, 255));
        horasLabel.setText("jLabel1");

        pararHiloButon.setText("PARAR");
        pararHiloButon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pararHiloButonActionPerformed(evt);
            }
        });

        jButton3.setText("SALIR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("RESTAURAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(barraProgresoGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(escribaElNumeroLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelIteraciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(empezarTestButon, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(iteracionLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(iteracionActualLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(iteracionesTotalesLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(porcentajeActualLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(porcientoCombletadoLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(horasLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dosPuntosHoraLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minutosLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dosPuntosHoraLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(segundosLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pararHiloButon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(escribaElNumeroLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelIteraciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(empezarTestButon, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(iteracionLabel)
                    .addComponent(iteracionActualLabel)
                    .addComponent(deLabel)
                    .addComponent(iteracionesTotalesLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(porcentajeActualLabel)
                    .addComponent(porcientoCombletadoLabel)
                    .addComponent(segundosLabel)
                    .addComponent(dosPuntosHoraLabel1)
                    .addComponent(minutosLabel)
                    .addComponent(dosPuntosHoraLabel2)
                    .addComponent(horasLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(barraProgresoGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pararHiloButon)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(562, 505));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void empezarTestButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_empezarTestButonActionPerformed
        // TODO add your handling code here:
        try {
            if (numeroIteracionesTxt.getText().isEmpty() || Integer.valueOf(numeroIteracionesTxt.getText()) < 100 || Long.valueOf(numeroIteracionesTxt.getText()) > Integer.MAX_VALUE) {
                JOptionPane.showMessageDialog(this, "Debe escribir un número de iteraciones correcto. Mínimo 100. Máximo: " + Integer.MAX_VALUE, "Error!", JOptionPane.ERROR_MESSAGE);
            } else {
                this.setSize(550, 500);
                hilo = new ThreadPrincipal();
                hilo.start();
                empezarTestButon.setEnabled(false);
                pararHiloButon.setEnabled(true);
            }
        } catch (Exception error) {
            JOptionPane.showMessageDialog(this, error.getMessage(), "Error!", JOptionPane.ERROR_MESSAGE);
            empezarTestButon.setEnabled(true);
        }
    }//GEN-LAST:event_empezarTestButonActionPerformed

    private void iteracionesPredeterminadasComboBoxPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_iteracionesPredeterminadasComboBoxPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        this.setIteracionesPredeterminadas(this.iteracionesPredeterminadasComboBox.getSelectedItem().toString());
    }//GEN-LAST:event_iteracionesPredeterminadasComboBoxPopupMenuWillBecomeInvisible

    private void pararHiloButonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pararHiloButonActionPerformed
        // TODO add your handling code here:
        this.detenerThread();
    }//GEN-LAST:event_pararHiloButonActionPerformed

    public void detenerThread() {
        try {
            if (hilo.isAlive()) {
                hilo.interrupt();
                empezarTestButon.setEnabled(true);
                int n = 1;
                while (hilo.isInterrupted()) {
                    consolaTextPane.append("\nIntento " + n + " de detener el proceso");
                    System.out.println("\nIntento " + n + " de detener el proceso");
                    n++;
                }
                hilo.stop();
                consolaTextPane.append("\n\nPROCESO DETENIDO POR EL USUARIO");
                consolaTextPane.setCaretPosition(Inicio.consolaTextPane.getDocument().getLength());
                pararHiloButon.setEnabled(false);
            } else {
                JOptionPane.showMessageDialog(this, "Debe iniciar el proceso para pararlo", "Advertencia!", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception error) {
            JOptionPane.showMessageDialog(this, error.getMessage());
        }
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        /*
        try {
            System.out.println("Ultima línea: " + consolaTextPane.getText(consolaTextPane.getDocument().getLength() - 1, consolaTextPane.getDocument().getLength()));
        } catch (Exception error) {
            JOptionPane.showMessageDialog(this, error.getMessage(), "Error!", JOptionPane.ERROR_MESSAGE);
        }
         */
        System.exit(0);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void consolaTextPaneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_consolaTextPaneKeyPressed
        // TODO add your handling code here:

        if ((evt.getKeyCode() == KeyEvent.VK_F5) && (!consolaTextPane.isEditable()) && (!hilo.isAlive())) {
            if (JOptionPane.showConfirmDialog(this, "¿Desea habilitar la edición y la lectura de comandos desde la consola del programa?", "Confirmación de seguridad", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                consolaTextPane.setEditable(true);
                consolaTextPane.append("\n\nNewVillageCPUBURN&PASS//AdvancedMode::\n");
                colocarCursorConsolaUltimaLinea();
            }
        }
        /*
        if ((evt.getKeyCode() == KeyEvent.VK_ENTER) && (consolaTextPane.isEditable()) && (!consolaTextPane.getText().isEmpty())) {
            Comandos.ejecutar(getUltimaLineaConsola());
        }
         */
        if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            JOptionPane.showMessageDialog(this, "Borrando");
            consolaTextPane.setText(consolaTextPane.getText());
        }
        colocarCursorConsolaUltimaLinea();
    }//GEN-LAST:event_consolaTextPaneKeyPressed

    private void consolaTextPaneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consolaTextPaneMouseClicked
        // TODO add your handling code here:
        colocarCursorConsolaUltimaLinea();
    }//GEN-LAST:event_consolaTextPaneMouseClicked

    private void consolaTextPaneMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consolaTextPaneMouseReleased
        // TODO add your handling code here:
        colocarCursorConsolaUltimaLinea();
    }//GEN-LAST:event_consolaTextPaneMouseReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (this.hilo.isAlive()) {
            this.detenerThread();
        }
        Inicio inicio = new Inicio();
        this.setVisible(false);
        inicio.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    public static String getUltimaLineaConsola() {
        String textoCompleto = consolaTextPane.getText();
        StringTokenizer tk = new StringTokenizer(textoCompleto, "\n");
        String ultimaLinea = "";
        while (tk.hasMoreTokens()) {
            ultimaLinea = tk.nextToken();
        }
        return ultimaLinea;
    }

    public static void colocarCursorConsolaUltimaLinea() {
        try {
            int indiceUltimaLinea = 0;
            indiceUltimaLinea = consolaTextPane.getDocument().getLength();
            consolaTextPane.setCaretPosition(indiceUltimaLinea + 1 - 1);
        } catch (Exception error) {
            System.out.println(error.getMessage());
        }
    }

    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        try {
            UIManager.setLookAndFeel(
                    //UIManager.getCrossPlatformLookAndFeelClassName()
                    UIManager.getSystemLookAndFeelClassName()
            //com.sun.java.swing.plaf.gtk.GTKLookAndFeel
            //com.sun.java.swing.plaf.windows.WindowsLookAndFeel
            );

        } catch (Exception e) {
            System.err.println(e.getMessage());
        }

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JProgressBar barraProgresoGeneral;
    public static javax.swing.JTextArea consolaTextPane;
    public static javax.swing.JLabel deLabel;
    public static javax.swing.JLabel dosPuntosHoraLabel1;
    public static javax.swing.JLabel dosPuntosHoraLabel2;
    public static javax.swing.JButton empezarTestButon;
    private javax.swing.JLabel escribaElNumeroLabel;
    public static javax.swing.JLabel horasLabel;
    public static javax.swing.JLabel iteracionActualLabel;
    public static javax.swing.JLabel iteracionLabel;
    private javax.swing.JComboBox iteracionesPredeterminadasComboBox;
    public static javax.swing.JLabel iteracionesTotalesLabel;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JLabel minutosLabel;
    public static javax.swing.JTextPane numeroIteracionesTxt;
    private javax.swing.JPanel panelIteraciones;
    public static javax.swing.JButton pararHiloButon;
    public static javax.swing.JLabel porcentajeActualLabel;
    public static javax.swing.JLabel porcientoCombletadoLabel;
    public static javax.swing.JLabel segundosLabel;
    // End of variables declaration//GEN-END:variables
}
